{"version":3,"file":"static/js/674.47b416d8.chunk.js","mappings":"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","sources":["Api.js","pages/Movies/Movies.styled.js","components/Loader.jsx","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '83584156b00a2d23d72a1dbc78073946';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport class Api {\n  constructor() {\n    this._query = '';\n    this._movieId = null;\n  }\n\n  async fetch(type) {\n    try {\n      let res;\n\n      switch (type) {\n        case 'trending':\n          res = await axios.get(\n            `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n          );\n          break;\n\n        case 'byQuery':\n          res = await axios.get(\n            `${BASE_URL}search/movie?api_key=${KEY}&query=${this._query}&include_adult=false&language=en-US&page=1`\n          );\n          break;\n\n        case 'details':\n          res = await axios.get(\n            `${BASE_URL}movie/${this._movieId}?api_key=${KEY}&language=en-US`\n          );\n          return res.data;\n\n        case 'credits':\n          res = await axios.get(\n            `${BASE_URL}movie/${this._movieId}/credits?api_key=${KEY}&language=en-US`\n          );\n          return res.data.cast;\n\n        case 'reviews':\n          res = await axios.get(\n            `${BASE_URL}movie/${this._movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n          );\n          break;\n\n        default:\n          return;\n      }\n\n      return res.data.results;\n    } catch (error) {\n      throw new Error('Something went wrong');\n    }\n  }\n\n  get query() {\n    return this._query;\n  }\n\n  set query(newQuery) {\n    this._query = newQuery;\n  }\n\n  get movieId() {\n    return this._movieId;\n  }\n\n  set movieId(id) {\n    this._movieId = id;\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n  border-radius: 8px;\n  font-size: 20px;\n`;\n\nexport const Form = styled.form`\n  margin: 10px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  height: 30px;\n  width: 70px;\n  margin-left: 5px;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <ThreeCircles\n        height=\"100%\"\n        width=\"100%\"\n        color=\"#4fa94d\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"green\"\n        innerCircleColor=\"blue\"\n        middleCircleColor=\"tomato\"\n      />\n    </div>\n  );\n};","import { useState, useEffect, lazy } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  NotificationContainer,\n} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nimport { Input, Form, Button } from './Movies.styled';\n\nimport { Api } from '../../Api';\nimport { Loader } from '../../components/Loader';\n\nconst MoviesList = lazy(() => import('../../components/MoviesList'));\n\nconst api = new Api();\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!searchParams.get('query')) {\n        return;\n      }\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        api.query = searchParams.get('query');\n        const data = await api.fetch('byQuery');\n\n        if (data.length === 0) {\n          setError('Enter valid query');\n        } else {\n          setMovies(data);\n        }\n      } catch (error) {\n        setError('Something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!searchParams.get('query')) {\n      setError('Enter something');\n      return;\n    }\n\n    setSearchParams({ query: searchParams.get('query') });\n  };\n\n  const handleChange = e => setSearchParams({ query: e.target.value });\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input onChange={handleChange} value={searchParams.get('query') || ''} />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n\n      {isLoading && <Loader />}\n      {error && <p>Oops, something went wrong</p>}\n      {movies.length !== 0 && <MoviesList movies={movies} />}\n\n      <NotificationContainer />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","BASE_URL","Api","this","_query","_movieId","type","axios","res","data","cast","results","Error","newQuery","id","Input","styled","Form","Button","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","MoviesList","lazy","api","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","error","setError","useEffect","fetchMovies","get","query","fetch","length","onSubmit","e","preventDefault","onChange","target","value"],"sourceRoot":""}